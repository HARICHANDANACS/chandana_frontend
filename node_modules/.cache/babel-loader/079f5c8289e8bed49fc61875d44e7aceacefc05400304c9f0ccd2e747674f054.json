{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mythri\\\\Collage\\\\SRM\\\\doctor-listing-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport FilterPanel from \"./components/FilterPanel\";\nimport DoctorCard from \"./components/DoctorCard\";\nimport SortPanel from \"./components/SortPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [consultationType, setConsultationType] = useState(\"All\");\n  const [specialties, setSpecialties] = useState([]);\n  const [sortOption, setSortOption] = useState(\"Price\");\n  const handleConsultationTypeChange = e => {\n    setConsultationType(e.target.value);\n  };\n  const handleSpecialtyChange = specialty => {\n    setSpecialties(prevSpecialties => prevSpecialties.includes(specialty) ? prevSpecialties.filter(spec => spec !== specialty) : [...prevSpecialties, specialty]);\n  };\n  const handleSortOptionChange = e => {\n    setSortOption(e.target.value);\n  };\n  const handleClearFilters = () => {\n    setConsultationType(\"All\");\n    setSpecialties([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(FilterPanel, {\n        consultationType: consultationType,\n        onConsultationTypeChange: handleConsultationTypeChange,\n        specialties: specialties,\n        onSpecialtyChange: handleSpecialtyChange,\n        onClearFilters: handleClearFilters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctor-list\",\n        children: doctors.filter(doctor => (consultationType === \"All\" || doctor.consultationType === consultationType) && specialties.some(specialty => doctor.specialties.includes(specialty))).sort((a, b) => {\n          if (sortOption === \"Price\") {\n            return a.fees - b.fees;\n          } else if (sortOption === \"Experience\") {\n            return b.experience - a.experience;\n          }\n          return 0;\n        }).map(doctor => /*#__PURE__*/_jsxDEV(DoctorCard, {\n          doctor: doctor\n        }, doctor.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MxVCv8ec12EgL5AxeZ/ftkNaHZA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FilterPanel","DoctorCard","SortPanel","jsxDEV","_jsxDEV","App","_s","consultationType","setConsultationType","specialties","setSpecialties","sortOption","setSortOption","handleConsultationTypeChange","e","target","value","handleSpecialtyChange","specialty","prevSpecialties","includes","filter","spec","handleSortOptionChange","handleClearFilters","className","children","onConsultationTypeChange","onSpecialtyChange","onClearFilters","fileName","_jsxFileName","lineNumber","columnNumber","doctors","doctor","some","sort","a","b","fees","experience","map","id","_c","$RefreshReg$"],"sources":["D:/Mythri/Collage/SRM/doctor-listing-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport FilterPanel from \"./components/FilterPanel\";\nimport DoctorCard from \"./components/DoctorCard\";\nimport SortPanel from \"./components/SortPanel\";\n\nfunction App() {\n  const [consultationType, setConsultationType] = useState(\"All\");\n  const [specialties, setSpecialties] = useState([]);\n  const [sortOption, setSortOption] = useState(\"Price\");\n\n  const handleConsultationTypeChange = (e) => {\n    setConsultationType(e.target.value);\n  };\n\n  const handleSpecialtyChange = (specialty) => {\n    setSpecialties((prevSpecialties) =>\n      prevSpecialties.includes(specialty)\n        ? prevSpecialties.filter((spec) => spec !== specialty)\n        : [...prevSpecialties, specialty]\n    );\n  };\n\n  const handleSortOptionChange = (e) => {\n    setSortOption(e.target.value);\n  };\n\n  const handleClearFilters = () => {\n    setConsultationType(\"All\");\n    setSpecialties([]);\n  };\n\n  return (\n    <div className=\"container mt-4\">\n      <div className=\"d-flex\">\n        <FilterPanel\n          consultationType={consultationType}\n          onConsultationTypeChange={handleConsultationTypeChange}\n          specialties={specialties}\n          onSpecialtyChange={handleSpecialtyChange}\n          onClearFilters={handleClearFilters}\n        />\n        <div className=\"doctor-list\">\n          {doctors\n            .filter(\n              (doctor) =>\n                (consultationType === \"All\" ||\n                  doctor.consultationType === consultationType) &&\n                specialties.some((specialty) =>\n                  doctor.specialties.includes(specialty)\n                )\n            )\n            .sort((a, b) => {\n              if (sortOption === \"Price\") {\n                return a.fees - b.fees;\n              } else if (sortOption === \"Experience\") {\n                return b.experience - a.experience;\n              }\n              return 0;\n            })\n            .map((doctor) => (\n              <DoctorCard key={doctor.id} doctor={doctor} />\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}