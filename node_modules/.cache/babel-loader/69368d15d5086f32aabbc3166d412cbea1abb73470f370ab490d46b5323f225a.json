{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mythri\\\\Collage\\\\SRM\\\\doctor-listing-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport FilterPanel from \"./components/FilterPanel\";\nimport DoctorCard from \"./components/DoctorCard\";\nimport SortPanel from \"./components/SortPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State hooks for consultation type, selected specialties, and sorting option\n  const [consultationType, setConsultationType] = useState(\"All\");\n  const [specialties, setSpecialties] = useState([]);\n  const [sortOption, setSortOption] = useState(\"Price\");\n  const [doctors, setDoctors] = useState([]); // State to hold the doctors data\n\n  // Fetch doctors data from API or static file\n  useEffect(() => {\n    // Example: Fetch data (replace with actual API call)\n    const fetchedDoctors = [{\n      id: \"111418\",\n      name: \"Dr. Kshitija Jagdale\",\n      specialities: [{\n        name: \"Dentist\"\n      }],\n      experience: 13,\n      // Assuming number of years\n      fees: 500,\n      clinic: {\n        name: \"The Dent Inn Advanced Dental Clinic\",\n        address: {\n          locality: \"Wanowrie\",\n          city: \"Pune\"\n        }\n      },\n      consultationType: \"In Clinic\" // or \"Video Consult\"\n    }\n    // More doctor objects go here...\n    ];\n    setDoctors(fetchedDoctors);\n  }, []);\n\n  // Handle changes in the consultation type radio buttons\n  const handleConsultationTypeChange = e => {\n    setConsultationType(e.target.value);\n  };\n\n  // Handle changes in specialties (checkboxes)\n  const handleSpecialtyChange = specialty => {\n    setSpecialties(prevSpecialties => prevSpecialties.includes(specialty) ? prevSpecialties.filter(spec => spec !== specialty) : [...prevSpecialties, specialty]);\n  };\n\n  // Handle changes in sort options (Price or Experience)\n  const handleSortOptionChange = e => {\n    setSortOption(e.target.value);\n  };\n\n  // Clear all filters\n  const handleClearFilters = () => {\n    setConsultationType(\"All\");\n    setSpecialties([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(FilterPanel, {\n        consultationType: consultationType,\n        onConsultationTypeChange: handleConsultationTypeChange,\n        specialties: specialties,\n        onSpecialtyChange: handleSpecialtyChange,\n        onClearFilters: handleClearFilters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctor-list\",\n        children: doctors.filter(doctor => (consultationType === \"All\" || doctor.consultationType === consultationType) && (specialties.length === 0 || doctor.specialities.some(spec => specialties.includes(spec.name)))).sort((a, b) => {\n          if (sortOption === \"Price\") {\n            return a.fees - b.fees; // Sort by fees\n          } else if (sortOption === \"Experience\") {\n            return b.experience - a.experience; // Sort by experience (descending)\n          }\n          return 0;\n        }).map(doctor => /*#__PURE__*/_jsxDEV(DoctorCard, {\n          doctor: doctor\n        }, doctor.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ljvbJm2UhtoL77a8Gff5c1xmGpc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","FilterPanel","DoctorCard","SortPanel","jsxDEV","_jsxDEV","App","_s","consultationType","setConsultationType","specialties","setSpecialties","sortOption","setSortOption","doctors","setDoctors","fetchedDoctors","id","name","specialities","experience","fees","clinic","address","locality","city","handleConsultationTypeChange","e","target","value","handleSpecialtyChange","specialty","prevSpecialties","includes","filter","spec","handleSortOptionChange","handleClearFilters","className","children","onConsultationTypeChange","onSpecialtyChange","onClearFilters","fileName","_jsxFileName","lineNumber","columnNumber","doctor","length","some","sort","a","b","map","_c","$RefreshReg$"],"sources":["D:/Mythri/Collage/SRM/doctor-listing-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport FilterPanel from \"./components/FilterPanel\";\nimport DoctorCard from \"./components/DoctorCard\";\nimport SortPanel from \"./components/SortPanel\";\n\nfunction App() {\n  // State hooks for consultation type, selected specialties, and sorting option\n  const [consultationType, setConsultationType] = useState(\"All\");\n  const [specialties, setSpecialties] = useState([]);\n  const [sortOption, setSortOption] = useState(\"Price\");\n  const [doctors, setDoctors] = useState([]); // State to hold the doctors data\n\n  // Fetch doctors data from API or static file\n  useEffect(() => {\n    // Example: Fetch data (replace with actual API call)\n    const fetchedDoctors = [\n      {\n        id: \"111418\",\n        name: \"Dr. Kshitija Jagdale\",\n        specialities: [{ name: \"Dentist\" }],\n        experience: 13, // Assuming number of years\n        fees: 500,\n        clinic: {\n          name: \"The Dent Inn Advanced Dental Clinic\",\n          address: {\n            locality: \"Wanowrie\",\n            city: \"Pune\",\n          },\n        },\n        consultationType: \"In Clinic\", // or \"Video Consult\"\n      },\n      // More doctor objects go here...\n    ];\n    setDoctors(fetchedDoctors);\n  }, []);\n\n  // Handle changes in the consultation type radio buttons\n  const handleConsultationTypeChange = (e) => {\n    setConsultationType(e.target.value);\n  };\n\n  // Handle changes in specialties (checkboxes)\n  const handleSpecialtyChange = (specialty) => {\n    setSpecialties((prevSpecialties) =>\n      prevSpecialties.includes(specialty)\n        ? prevSpecialties.filter((spec) => spec !== specialty)\n        : [...prevSpecialties, specialty]\n    );\n  };\n\n  // Handle changes in sort options (Price or Experience)\n  const handleSortOptionChange = (e) => {\n    setSortOption(e.target.value);\n  };\n\n  // Clear all filters\n  const handleClearFilters = () => {\n    setConsultationType(\"All\");\n    setSpecialties([]);\n  };\n\n  return (\n    <div className=\"container mt-4\">\n      <div className=\"d-flex\">\n        {/* Filter Panel */}\n        <FilterPanel\n          consultationType={consultationType}\n          onConsultationTypeChange={handleConsultationTypeChange}\n          specialties={specialties}\n          onSpecialtyChange={handleSpecialtyChange}\n          onClearFilters={handleClearFilters}\n        />\n\n        {/* Doctor List Section */}\n        <div className=\"doctor-list\">\n          {doctors\n            .filter(\n              (doctor) =>\n                (consultationType === \"All\" ||\n                  doctor.consultationType === consultationType) &&\n                (specialties.length === 0 ||\n                  doctor.specialities.some((spec) =>\n                    specialties.includes(spec.name)\n                  ))\n            )\n            .sort((a, b) => {\n              if (sortOption === \"Price\") {\n                return a.fees - b.fees; // Sort by fees\n              } else if (sortOption === \"Experience\") {\n                return b.experience - a.experience; // Sort by experience (descending)\n              }\n              return 0;\n            })\n            .map((doctor) => (\n              <DoctorCard key={doctor.id} doctor={doctor} />\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}